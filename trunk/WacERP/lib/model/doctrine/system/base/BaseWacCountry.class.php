<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('WacCountry', 'wac_db_connection1');

/**
 * BaseWacCountry
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $pr_int1
 * @property integer $pr_int2
 * @property integer $priority
 * @property integer $is_avail
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property string $iso_code2
 * @property string $iso_code3
 * @property string $code
 * @property string $name
 * @property string $path
 * @property string $memo
 * @property string $pr_str1
 * @property string $pr_str2
 * 
 * @method integer    getId()         Returns the current record's "id" value
 * @method integer    getPrInt1()     Returns the current record's "pr_int1" value
 * @method integer    getPrInt2()     Returns the current record's "pr_int2" value
 * @method integer    getPriority()   Returns the current record's "priority" value
 * @method integer    getIsAvail()    Returns the current record's "is_avail" value
 * @method timestamp  getCreatedAt()  Returns the current record's "created_at" value
 * @method timestamp  getUpdatedAt()  Returns the current record's "updated_at" value
 * @method string     getIsoCode2()   Returns the current record's "iso_code2" value
 * @method string     getIsoCode3()   Returns the current record's "iso_code3" value
 * @method string     getCode()       Returns the current record's "code" value
 * @method string     getName()       Returns the current record's "name" value
 * @method string     getPath()       Returns the current record's "path" value
 * @method string     getMemo()       Returns the current record's "memo" value
 * @method string     getPrStr1()     Returns the current record's "pr_str1" value
 * @method string     getPrStr2()     Returns the current record's "pr_str2" value
 * @method WacCountry setId()         Sets the current record's "id" value
 * @method WacCountry setPrInt1()     Sets the current record's "pr_int1" value
 * @method WacCountry setPrInt2()     Sets the current record's "pr_int2" value
 * @method WacCountry setPriority()   Sets the current record's "priority" value
 * @method WacCountry setIsAvail()    Sets the current record's "is_avail" value
 * @method WacCountry setCreatedAt()  Sets the current record's "created_at" value
 * @method WacCountry setUpdatedAt()  Sets the current record's "updated_at" value
 * @method WacCountry setIsoCode2()   Sets the current record's "iso_code2" value
 * @method WacCountry setIsoCode3()   Sets the current record's "iso_code3" value
 * @method WacCountry setCode()       Sets the current record's "code" value
 * @method WacCountry setName()       Sets the current record's "name" value
 * @method WacCountry setPath()       Sets the current record's "path" value
 * @method WacCountry setMemo()       Sets the current record's "memo" value
 * @method WacCountry setPrStr1()     Sets the current record's "pr_str1" value
 * @method WacCountry setPrStr2()     Sets the current record's "pr_str2" value
 * 
 * @package    WacERP
 * @subpackage model
 * @author     JianBinBi <jianbinbi@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWacCountry extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('wac_country');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('pr_int1', 'integer', 4, array(
             'type' => 'integer',
             'default' => '0',
             'length' => 4,
             ));
        $this->hasColumn('pr_int2', 'integer', 4, array(
             'type' => 'integer',
             'default' => '0',
             'length' => 4,
             ));
        $this->hasColumn('priority', 'integer', 4, array(
             'type' => 'integer',
             'default' => '50',
             'length' => 4,
             ));
        $this->hasColumn('is_avail', 'integer', 1, array(
             'type' => 'integer',
             'default' => '1',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('iso_code2', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('iso_code3', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('code', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('path', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('memo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('pr_str1', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('pr_str2', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}