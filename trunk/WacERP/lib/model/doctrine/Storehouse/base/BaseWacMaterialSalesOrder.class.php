<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('WacMaterialSalesOrder', 'wac_db_connection1');

/**
 * BaseWacMaterialSalesOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $code
 * @property integer $user_id
 * @property integer $src_storehouse_id
 * @property integer $src_storeroom_id
 * @property integer $customer_id
 * @property decimal $total_price
 * @property timestamp $biz_date
 * @property integer $pr_int1
 * @property integer $pr_int2
 * @property string $pr_str1
 * @property string $pr_str2
 * @property integer $priority
 * @property integer $is_avail
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property WacGuardUser $User
 * @property WacCustomer $Cusotmer
 * @property WacStorehouse $SrcStorehouse
 * @property WacStoreroom $SrcStoreroom
 * @property Doctrine_Collection $Items
 * 
 * @method integer               getId()                Returns the current record's "id" value
 * @method string                getName()              Returns the current record's "name" value
 * @method string                getCode()              Returns the current record's "code" value
 * @method integer               getUserId()            Returns the current record's "user_id" value
 * @method integer               getSrcStorehouseId()   Returns the current record's "src_storehouse_id" value
 * @method integer               getSrcStoreroomId()    Returns the current record's "src_storeroom_id" value
 * @method integer               getCustomerId()        Returns the current record's "customer_id" value
 * @method decimal               getTotalPrice()        Returns the current record's "total_price" value
 * @method timestamp             getBizDate()           Returns the current record's "biz_date" value
 * @method integer               getPrInt1()            Returns the current record's "pr_int1" value
 * @method integer               getPrInt2()            Returns the current record's "pr_int2" value
 * @method string                getPrStr1()            Returns the current record's "pr_str1" value
 * @method string                getPrStr2()            Returns the current record's "pr_str2" value
 * @method integer               getPriority()          Returns the current record's "priority" value
 * @method integer               getIsAvail()           Returns the current record's "is_avail" value
 * @method timestamp             getCreatedAt()         Returns the current record's "created_at" value
 * @method timestamp             getUpdatedAt()         Returns the current record's "updated_at" value
 * @method WacGuardUser          getUser()              Returns the current record's "User" value
 * @method WacCustomer           getCusotmer()          Returns the current record's "Cusotmer" value
 * @method WacStorehouse         getSrcStorehouse()     Returns the current record's "SrcStorehouse" value
 * @method WacStoreroom          getSrcStoreroom()      Returns the current record's "SrcStoreroom" value
 * @method Doctrine_Collection   getItems()             Returns the current record's "Items" collection
 * @method WacMaterialSalesOrder setId()                Sets the current record's "id" value
 * @method WacMaterialSalesOrder setName()              Sets the current record's "name" value
 * @method WacMaterialSalesOrder setCode()              Sets the current record's "code" value
 * @method WacMaterialSalesOrder setUserId()            Sets the current record's "user_id" value
 * @method WacMaterialSalesOrder setSrcStorehouseId()   Sets the current record's "src_storehouse_id" value
 * @method WacMaterialSalesOrder setSrcStoreroomId()    Sets the current record's "src_storeroom_id" value
 * @method WacMaterialSalesOrder setCustomerId()        Sets the current record's "customer_id" value
 * @method WacMaterialSalesOrder setTotalPrice()        Sets the current record's "total_price" value
 * @method WacMaterialSalesOrder setBizDate()           Sets the current record's "biz_date" value
 * @method WacMaterialSalesOrder setPrInt1()            Sets the current record's "pr_int1" value
 * @method WacMaterialSalesOrder setPrInt2()            Sets the current record's "pr_int2" value
 * @method WacMaterialSalesOrder setPrStr1()            Sets the current record's "pr_str1" value
 * @method WacMaterialSalesOrder setPrStr2()            Sets the current record's "pr_str2" value
 * @method WacMaterialSalesOrder setPriority()          Sets the current record's "priority" value
 * @method WacMaterialSalesOrder setIsAvail()           Sets the current record's "is_avail" value
 * @method WacMaterialSalesOrder setCreatedAt()         Sets the current record's "created_at" value
 * @method WacMaterialSalesOrder setUpdatedAt()         Sets the current record's "updated_at" value
 * @method WacMaterialSalesOrder setUser()              Sets the current record's "User" value
 * @method WacMaterialSalesOrder setCusotmer()          Sets the current record's "Cusotmer" value
 * @method WacMaterialSalesOrder setSrcStorehouse()     Sets the current record's "SrcStorehouse" value
 * @method WacMaterialSalesOrder setSrcStoreroom()      Sets the current record's "SrcStoreroom" value
 * @method WacMaterialSalesOrder setItems()             Sets the current record's "Items" collection
 * 
 * @package    WacERP
 * @subpackage model
 * @author     JianBinBi <jianbinbi@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWacMaterialSalesOrder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('wac_material_sales_order');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('code', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('src_storehouse_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('src_storeroom_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('customer_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('total_price', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('biz_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('pr_int1', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('pr_int2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('pr_str1', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('pr_str2', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('priority', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '50',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_avail', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('WacGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('WacCustomer as Cusotmer', array(
             'local' => 'customer_id',
             'foreign' => 'id'));

        $this->hasOne('WacStorehouse as SrcStorehouse', array(
             'local' => 'src_storehouse_id',
             'foreign' => 'id'));

        $this->hasOne('WacStoreroom as SrcStoreroom', array(
             'local' => 'src_storeroom_id',
             'foreign' => 'id'));

        $this->hasMany('WacMaterialSalesOrderItem as Items', array(
             'local' => 'id',
             'foreign' => 'order_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}