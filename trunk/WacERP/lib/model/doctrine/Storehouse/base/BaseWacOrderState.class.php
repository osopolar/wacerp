<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('WacOrderState', 'wac_db_connection1');

/**
 * BaseWacOrderState
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $order_id
 * @property integer $order_type
 * @property integer $state
 * @property integer $changer_id
 * @property integer $pr_int1
 * @property integer $pr_int2
 * @property string $pr_str1
 * @property string $pr_str2
 * @property integer $priority
 * @property integer $is_avail
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property WacGuardUser $Changer
 * 
 * @method integer       getId()         Returns the current record's "id" value
 * @method integer       getOrderId()    Returns the current record's "order_id" value
 * @method integer       getOrderType()  Returns the current record's "order_type" value
 * @method integer       getState()      Returns the current record's "state" value
 * @method integer       getChangerId()  Returns the current record's "changer_id" value
 * @method integer       getPrInt1()     Returns the current record's "pr_int1" value
 * @method integer       getPrInt2()     Returns the current record's "pr_int2" value
 * @method string        getPrStr1()     Returns the current record's "pr_str1" value
 * @method string        getPrStr2()     Returns the current record's "pr_str2" value
 * @method integer       getPriority()   Returns the current record's "priority" value
 * @method integer       getIsAvail()    Returns the current record's "is_avail" value
 * @method timestamp     getCreatedAt()  Returns the current record's "created_at" value
 * @method timestamp     getUpdatedAt()  Returns the current record's "updated_at" value
 * @method WacGuardUser  getChanger()    Returns the current record's "Changer" value
 * @method WacOrderState setId()         Sets the current record's "id" value
 * @method WacOrderState setOrderId()    Sets the current record's "order_id" value
 * @method WacOrderState setOrderType()  Sets the current record's "order_type" value
 * @method WacOrderState setState()      Sets the current record's "state" value
 * @method WacOrderState setChangerId()  Sets the current record's "changer_id" value
 * @method WacOrderState setPrInt1()     Sets the current record's "pr_int1" value
 * @method WacOrderState setPrInt2()     Sets the current record's "pr_int2" value
 * @method WacOrderState setPrStr1()     Sets the current record's "pr_str1" value
 * @method WacOrderState setPrStr2()     Sets the current record's "pr_str2" value
 * @method WacOrderState setPriority()   Sets the current record's "priority" value
 * @method WacOrderState setIsAvail()    Sets the current record's "is_avail" value
 * @method WacOrderState setCreatedAt()  Sets the current record's "created_at" value
 * @method WacOrderState setUpdatedAt()  Sets the current record's "updated_at" value
 * @method WacOrderState setChanger()    Sets the current record's "Changer" value
 * 
 * @package    WacERP
 * @subpackage model
 * @author     JianBinBi <jianbinbi@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWacOrderState extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('wac_order_state');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('order_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('order_type', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('state', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('changer_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('pr_int1', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('pr_int2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('pr_str1', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('pr_str2', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('priority', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '50',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_avail', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));

        $this->setSubClasses(array(
             'WacMaterialDeliveryOrderState' => 
             array(
              'order_type' => 1,
             ),
             'WacMaterialPurchaseOrderState' => 
             array(
              'order_type' => 2,
             ),
             'WacMaterialSaleOrderState' => 
             array(
              'order_type' => 3,
             ),
             'WacMaterialShippingOrderState' => 
             array(
              'order_type' => 4,
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('WacGuardUser as Changer', array(
             'local' => 'changer_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}